# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-11 02:31
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, upload_to='actors/%Y/%m/%d/')),
                ('group', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Argument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('counterargument', models.BooleanField(default=False)),
                ('position', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Curator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='actors/%Y/%m/%d/')),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Actor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CuratorApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('vote', models.SmallIntegerField()),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Curator')),
            ],
        ),
        migrations.CreateModel(
            name='CuratorQueueItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Balsavimas'), (1, 'Teisės aktas')])),
                ('title', models.CharField(max_length=255)),
                ('source_title', models.CharField(blank=True, max_length=255, verbose_name='Šaltinio antraštė')),
                ('source_link', models.CharField(blank=True, max_length=255, verbose_name='Šaltinio nuoroda')),
                ('timestamp', models.DateTimeField(verbose_name='Data, laikas')),
                ('position', models.FloatField()),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('last_update', models.DateTimeField(blank=True, editable=False, null=True)),
                ('update_freq', models.PositiveIntegerField(default=86400, help_text='Indicator update frequency in seconds (86400 == 1 day).')),
                ('error_count', models.PositiveIntegerField(default=0, editable=False)),
                ('traceback', models.TextField(blank=True, editable=False)),
                ('title', models.CharField(max_length=255)),
                ('ylabel', models.CharField(max_length=255)),
                ('source', models.URLField(verbose_name='Šaltinis')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('since', models.DateTimeField()),
                ('until', models.DateTimeField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='manopozicija.Actor')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_link', models.URLField(blank=True, verbose_name='Nuoroda')),
                ('quote', models.TextField(verbose_name='Citata')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.SmallIntegerField(choices=[(1, 'Balsavo'), (2, 'Teikė')])),
                ('position', models.FloatField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Actor')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_title', models.CharField(blank=True, max_length=64)),
                ('source_title', models.CharField(blank=True, max_length=255, verbose_name='Šaltinio antraštė')),
                ('source_link', models.CharField(blank=True, max_length=255, verbose_name='Šaltinio nuoroda')),
                ('timestamp', models.DateTimeField(verbose_name='Data, laikas')),
                ('position', models.FloatField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('since', models.DateTimeField()),
                ('until', models.DateTimeField()),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Body')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.FloatField()),
                ('approved', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField()),
                ('object_id', models.PositiveIntegerField()),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Actor')),
                ('body', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Body')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),
                ('title', models.CharField(max_length=255, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
                ('logo', models.ImageField(blank=True, upload_to='topics/%Y/%m/%d/')),
                ('default_body', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Body')),
                ('indicators', models.ManyToManyField(blank=True, to='manopozicija.Indicator')),
            ],
        ),
        migrations.CreateModel(
            name='TopicCurator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('approved', models.DateTimeField(blank=True, null=True)),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Curator')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='UserPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Timeline')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='timeline',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Topic'),
        ),
        migrations.AddField(
            model_name='quote',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Source'),
        ),
        migrations.AddField(
            model_name='quote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='curatorqueueitem',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Topic'),
        ),
        migrations.AddField(
            model_name='curatorapproval',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.CuratorQueueItem'),
        ),
        migrations.AddField(
            model_name='argument',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Quote'),
        ),
        migrations.AddField(
            model_name='argument',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Topic'),
        ),
        migrations.AddField(
            model_name='actor',
            name='body',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manopozicija.Body'),
        ),
        migrations.AlterUniqueTogether(
            name='curatorqueueitem',
            unique_together=set([('topic', 'content_type', 'object_id')]),
        ),
    ]
